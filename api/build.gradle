// 부모로부터 상속 받는 아이다.
// 버전은 안써도 되는 이유 부모가 버전을 이미 설정 했기 때문에.
// 스프링을 시작하기 위해서는 기존 모듈 디펜던시는 삭제.
// 스프링이 동작하는 원리 = 부트 스타터 웹 디펜던시. 얘는 항상 짝으로 테스터까지 따라온다.
plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

group = 'org.delivery'
version = '1.0-SNAPSHOT'
java {
    sourceCompatibility = '11'
}
configurations { // 롬복이래요.
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies { // gradle 이라고 해서 별도로 다른건 아니고 우리가 필요한 디펜던시를 걸어주기만 하면 됨.
    compileOnly 'org.projectlombok:lombok' // 롬복
    annotationProcessor 'org.projectlombok:lombok' // 롬복 어노테이션
    implementation 'org.springframework.boot:spring-boot-starter-amqp' // 스프링 amqp 이거 있어야 rabbitmq 사용 할 수 있다.
    implementation 'org.springframework.boot:spring-boot-starter-web' // 스프링 웹
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // 스프링 웹 테스터
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // gradle -> api -> dependencies -> compileClasspath -> project db가 추가 된 것을 볼 수 있다.
    implementation project(':db') // 공통 부모 아래에 있는 것들 중에 db 프로젝트의 내용들을 내가 쓰겠다. 라는 뜻 이된다.
    implementation project(':common')
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'


}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = true
}
jar {
    enabled = false
}

